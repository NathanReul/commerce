{"version":3,"file":"purchasablepricefield.js","mappings":"kPAGI,gBAAOA,MAAMC,YACfD,MAAMC,SAAW,CAAC,GAGpBD,MAAMC,SAASC,sBAAwBC,QAAQC,KAAKC,OAAO,CACzDC,WAAY,KACZC,iBAAkB,KAClBC,YAAa,KACbC,gBAAiB,KACjBC,aAAc,KACdC,cAAe,KAEfC,GAAI,KAEJC,SAAU,CACRC,2BAA4B,KAC5BC,OAAQ,KACRC,uBAAwB,KACxBC,WAAY,CACVC,MAAO,KACPC,iBAAkB,OAItBC,KAAM,SAAUR,EAAIS,GAClBC,KAAKC,YAAYF,EAAUC,KAAKT,UAChCS,KAAKV,GAAKA,EACVU,KAAKhB,WAAakB,EAAE,IAAMF,KAAKV,IAC/BU,KAAKb,gBAAkBa,KAAKhB,WAAWmB,KAAK,4BAC5CH,KAAKf,iBAAmBe,KAAKb,gBAAgBgB,KAC3C,4BAEFH,KAAKd,YAAcc,KAAKhB,WAAWmB,KAAK,4BACxCH,KAAKZ,aAAeY,KAAKhB,WAAWmB,KAClC,eACEH,KAAKD,SAASJ,WAAWC,MACzB,mBACAI,KAAKD,SAASJ,WAAWE,iBACzB,MAEJG,KAAKX,cAAgBW,KAAKhB,WAAWmB,KAAK,oBAE1CH,KAAKI,2BAELJ,KAAKd,YAAYmB,GAAG,SAAS,SAACC,GAC5BA,EAAEC,gBACH,GACF,EAEDC,gBAAiB,WAAY,WAC3BR,KAAKf,iBAAiBwB,YAAY,UAElC/B,MAAMgC,kBAAkB,OAAQ,kCAAmC,CACjEC,KAAM,CACJlB,OAAQO,KAAKD,SAASN,OACtBmB,UAAW,CAACA,UAAWZ,KAAKD,SAASL,wBACrCmB,UAAWX,EACT,eAAiBF,KAAKD,SAASJ,WAAWC,MAAQ,MAClDkB,MACFC,qBAAsBb,EACpB,eAAiBF,KAAKD,SAASJ,WAAWE,iBAAmB,MAC7DiB,MACFE,gBAAgB,EAChBC,mBAAmB,KAGpBC,MAAK,SAACC,GACL,EAAKlC,iBAAiBmC,SAAS,UAE3BD,EAASR,MACX,EAAKxB,gBACFgB,KAAK,cACLkB,YAAYF,EAASR,KAAKW,WAG/B,EAAKlC,aAAamC,IAAI,UACtB,EAAKlC,cAAckC,IAAI,SAEvB,EAAKnB,0BACN,IA3BH,OA4BS,YAAgB,IAAde,EAAc,EAAdA,SACFA,IAIL,EAAKlC,iBAAiBmC,SAAS,UAE3BD,EAASR,MAAQQ,EAASR,KAAKa,SACjC9C,MAAM+C,GAAGC,aAAaP,EAASR,KAAKa,SAGtC,EAAKpC,aAAamC,IAAI,UACtB,EAAKlC,cAAckC,IAAI,SAEvB,EAAKnB,2BACN,GACJ,EAEDA,yBAA0B,WACxB,IAAMuB,EAAW3B,KACjBA,KAAKZ,aAAaiB,GAAG,UAAU,SAAUC,GACvCqB,EAASnB,iBACV,IAGDR,KAAKX,cAAcgB,GAAG,SAAS,SAAUC,GACvCA,EAAEC,iBACF,IAAIqB,EAAQ1B,EAAEF,MACV6B,EAAS,CACXC,QAASF,EAAMjB,KAAK,aAGlBiB,EAAMjB,KAAK,2BACbkB,EAAOvC,GAAKsC,EAAMjB,KAAK,4BAEvBkB,EAAOE,cAAgBH,EAAMjB,KAAK,kBAClCkB,EAAOG,KAAOL,EAAS5B,SAASP,4BAGjB,IAAId,MAAMuD,iBACzB,sCACA,CAACJ,OAAAA,IAGMxB,GAAG,UAAU,SAAU,GAAkB,EAAjBc,SAAiB,EAAPR,KACzCgB,EAASnB,iBACV,GACF,GACF,G","sources":["webpack:///./js/purchasablepricefield.js"],"sourcesContent":["/* jshint esversion: 6 */\n/* globals Craft, Garnish, $ */\n\nif (typeof Craft.Commerce === typeof undefined) {\n  Craft.Commerce = {};\n}\n\nCraft.Commerce.PurchasablePriceField = Garnish.Base.extend({\n  $container: null,\n  $loadingElements: null,\n  $refreshBtn: null,\n  $tableContainer: null,\n  $priceFields: null,\n  $cprSlideouts: null,\n\n  id: null,\n\n  defaults: {\n    catalogPricingRuleTempName: null,\n    siteId: null,\n    conditionBuilderConfig: null,\n    fieldNames: {\n      price: null,\n      promotionalPrice: null,\n    },\n  },\n\n  init: function (id, settings) {\n    this.setSettings(settings, this.defaults);\n    this.id = id;\n    this.$container = $('#' + this.id);\n    this.$tableContainer = this.$container.find('.js-price-list-container');\n    this.$loadingElements = this.$tableContainer.find(\n      '.js-prices-table-loading'\n    );\n    this.$refreshBtn = this.$container.find('.commerce-refresh-prices');\n    this.$priceFields = this.$container.find(\n      'input[name=\"' +\n        this.settings.fieldNames.price +\n        '\"], input[name=\"' +\n        this.settings.fieldNames.promotionalPrice +\n        '\"]'\n    );\n    this.$cprSlideouts = this.$container.find('.js-cpr-slideout');\n\n    this.initPurchasablePriceList();\n\n    this.$refreshBtn.on('click', (e) => {\n      e.preventDefault();\n    });\n  },\n\n  updatePriceList: function () {\n    this.$loadingElements.removeClass('hidden');\n\n    Craft.sendActionRequest('POST', 'commerce/catalog-pricing/prices', {\n      data: {\n        siteId: this.settings.siteId,\n        condition: {condition: this.settings.conditionBuilderConfig},\n        basePrice: $(\n          'input[name=\"' + this.settings.fieldNames.price + '\"]'\n        ).val(),\n        basePromotionalPrice: $(\n          'input[name=\"' + this.settings.fieldNames.promotionalPrice + '\"]'\n        ).val(),\n        forPurchasable: true,\n        includeBasePrices: false,\n      },\n    })\n      .then((response) => {\n        this.$loadingElements.addClass('hidden');\n\n        if (response.data) {\n          this.$tableContainer\n            .find('.tableview')\n            .replaceWith(response.data.tableHtml);\n        }\n\n        this.$priceFields.off('change');\n        this.$cprSlideouts.off('click');\n\n        this.initPurchasablePriceList();\n      })\n      .catch(({response}) => {\n        if (!response) {\n          return;\n        }\n\n        this.$loadingElements.addClass('hidden');\n\n        if (response.data && response.data.message) {\n          Craft.cp.displayError(response.data.message);\n        }\n\n        this.$priceFields.off('change');\n        this.$cprSlideouts.off('click');\n\n        this.initPurchasablePriceList();\n      });\n  },\n\n  initPurchasablePriceList: function () {\n    const instance = this;\n    this.$priceFields.on('change', function (e) {\n      instance.updatePriceList();\n    });\n\n    // New catalog price\n    this.$cprSlideouts.on('click', function (e) {\n      e.preventDefault();\n      let _this = $(this);\n      let params = {\n        storeId: _this.data('store-id'),\n      };\n\n      if (_this.data('catalog-pricing-rule-id')) {\n        params.id = _this.data('catalog-pricing-rule-id');\n      } else {\n        params.purchasableId = _this.data('purchasable-id');\n        params.name = instance.settings.catalogPricingRuleTempName;\n      }\n\n      const slideout = new Craft.CpScreenSlideout(\n        'commerce/catalog-pricing-rules/edit',\n        {params}\n      );\n\n      slideout.on('submit', function ({response, data}) {\n        instance.updatePriceList();\n      });\n    });\n  },\n});\n"],"names":["Craft","Commerce","PurchasablePriceField","Garnish","Base","extend","$container","$loadingElements","$refreshBtn","$tableContainer","$priceFields","$cprSlideouts","id","defaults","catalogPricingRuleTempName","siteId","conditionBuilderConfig","fieldNames","price","promotionalPrice","init","settings","this","setSettings","$","find","initPurchasablePriceList","on","e","preventDefault","updatePriceList","removeClass","sendActionRequest","data","condition","basePrice","val","basePromotionalPrice","forPurchasable","includeBasePrices","then","response","addClass","replaceWith","tableHtml","off","message","cp","displayError","instance","_this","params","storeId","purchasableId","name","CpScreenSlideout"],"sourceRoot":""}